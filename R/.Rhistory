table(is.na(df$gender))
table(is.na(df$birth))
table(is.na(df$code_job))
table(is.na(df$income))
table(is.na(df$loc))
# 데이터 수정
# 성별 데이터를 1은 male 2는 female 변경
table(df$gender)
df$gender
ifelse(
# 조건식
df$gender == 1,
'male',
ifelse(
df$gender == 2,
'female',
NA
)
)
ifelse(
# 조건식
df$gender == 1,
'male',
ifelse(
df$gender == 2,
'female',
NA
)
) -> df$gender
table(df$gender)
table(is.na(df$gender))
df %>%
select(gender, imcome)
df %>%
select(gender, income)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
filter(is.na(income))
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
filter(!is.na(income))
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
filter(!is.na(income)) %>%
filter(income != 0)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
filter(!is.na(income)) %>%
filter(income != 0) %>%
filter(income != 9999)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) | income != 0)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter((!is.na(income)) | (income != 0))
(!is.na(df$income)) | (df$income != 0)
table((!is.na(df$income)) | (df$income != 0))
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter((!is.na(income)) & (income != 0))
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0 & income == 9999)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0 & income != 9999)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender)
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender) %>%
summarise(gender_income = mean(income))
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender) %>%
summarise(gender_income = mean(income)) -> gender_income
df %>%
select(gender, income) %>%
# 인덱스의 조건식 : 0이 아닌 경우, 9999가 아닌 경우
# ,결측치 아닌경우
# filter(!is.na(income)) %>%
# filter(income != 0) %>%
# filter(income != 9999)
filter(!is.na(income) & income != 0 & income != 9999) %>%
group_by(gender) %>%
summarise(gender_mean = mean(income)) -> gender_income
ggplot(
data = gender_income,
aes(x = gender, y = gender_mean)
) + geom_col()
df %>%
mutate(age = 2015 - birth)
df %>%
mutate(age = 2015 - birth) %>%
head(1)
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income) & !income %in% c(0, 9999))
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income) & !income %in% c(0, 9999)) %>%
group_by(age) %>%
summarise(income_mean = mean(income))
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income) & !income %in% c(0, 9999)) %>%
group_by(age) %>%
summarise(income_mean = mean(income)) -> age_income
age_income %>%
arrange(desc(income_mean)) %>%
head(5)
ggplot(
data = age_income,
aes(x = age, y = income_mean)
) + geom_col()
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income)) %>%
filter(income != 0)
df %>%
mutate(age = 2015 - birth) %>%
filter(!is.na(income) & !income %in% c(0, 9999))
# income의 결측치와 0, 9999를 포함한 값들은 제거
# 나이 컬럼을 생성
# 연령대 컬럼을 생성
# (40세 미만 - 'young',
# 40세 이상 60세 미만 - 'middle'
# 60세 이상 - 'old')
# 연령대 컬럼을 기준으로 그룹화
# 그룹화 연산 - income 평균
# 변수 저장
# 막대 그래프 시각화
df %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
mutate(
age = 2015 - birth,
ageg = ifelse(
age < 40,
'young',
ifelse(
age < 60,
'middle',
'old'
)
)
)
# income의 결측치와 0, 9999를 포함한 값들은 제거
# 나이 컬럼을 생성
# 연령대 컬럼을 생성
# (40세 미만 - 'young',
# 40세 이상 60세 미만 - 'middle'
# 60세 이상 - 'old')
# 연령대 컬럼을 기준으로 그룹화
# 그룹화 연산 - income 평균
# 변수 저장
# 막대 그래프 시각화
df %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
mutate(
age = 2015 - birth,
ageg = ifelse(
age < 40,
'young',
ifelse(
age < 60,
'middle',
'old'
)
)
) %>%
group_by(ageg) %>%
summarise(income_mean = mean(income))
# income의 결측치와 0, 9999를 포함한 값들은 제거
# 나이 컬럼을 생성
# 연령대 컬럼을 생성
# (40세 미만 - 'young',
# 40세 이상 60세 미만 - 'middle'
# 60세 이상 - 'old')
# 연령대 컬럼을 기준으로 그룹화
# 그룹화 연산 - income 평균
# 변수 저장
# 막대 그래프 시각화
df %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
mutate(
age = 2015 - birth,
ageg = ifelse(
age < 40,
'young',
ifelse(
age < 60,
'middle',
'old'
)
)
) %>%
group_by(ageg) %>%
summarise(income_mean = mean(income)) -> ageg_income
ggolot(
data = ageg_income,
aes(x = ageg, y = income_mean)
) + geom_col()
ggplot(
data = ageg_income,
aes(x = ageg, y = income_mean)
) + geom_col()
ggplot(
data = ageg_income,
aes(x = ageg, y = income_mean)
) + geom_col() + scale_x_discrete(
limits = c('young', 'middle', 'old')
)
# 지역별 평균 임금을 확인
# income 데이터에서 결측치, 0, 9999는 제외
# 그룹화 지역을 기준으로
# 연산은 income의 평균
# 지역별 평균 임금을 출력
df %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(loc) %>%
summarise(income_mean = mean(income))
# 지역별 남녀 평균 임금을 확인
# income 데이터에서 결측치, 0, 9999는 제외
# 그룹화 지역, 성별을 기준으로
# 연산은 income의 평균
# 지역, 성별 평균 임금을 출력
# 그래프 시각화
df %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(loc, gender) %>%
summarise(income_mean = mean(income))
# 지역별 남녀 평균 임금을 확인
# income 데이터에서 결측치, 0, 9999는 제외
# 그룹화 지역, 성별을 기준으로
# 연산은 income의 평균
# 지역, 성별 평균 임금을 출력
# 그래프 시각화
df %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(loc, gender) %>%
summarise(income_mean = mean(income)) -> loc_gender_income
ggplot(
data = loc_gender_income,
aes(x = loc, y = mean_income)
) + geom_col()
ggplot(
data = loc_gender_income,
aes(x = loc, y = income_mean)
) + geom_col()
ggplot(
data = loc_gender_income,
aes(x = gender, y = income_mean)
) + geom_col()
ggplot(
data = loc_gender_income,
aes(x = loc, y = income_mean)
) + geom_col()
ggplot(
data = loc_gender_income,
aes(x = loc, y = income_mean, fill=gender)
) + geom_col()
ggplot(
data = loc_gender_income,
aes(x = loc, y = income_mean, fill=gender)
) + geom_col(
position = 'dodge'
)
ggplot(
data = loc_gender_income,
aes(x = loc, y = income_mean, fill=gender)
) + geom_col(
position = 'dodge'
) -> loc_gender_col
# 인터렉티브 그래프를 위한 패키지
install.packages('plotly')
library(plotly)
ggplotly(loc_gender_col)
# 엑셀 파일을 로드
# 패키지 설치
install.packages('readxl')
library(readxl)
read_excel('./data/Koweps_Codebook.xlsx')
read_excel('./data/Koweps_Codebook.xlsx',
sheet = 2)
read_excel('./data/Koweps_Codebook.xlsx',
sheet = 2) -> code_book
head(df, 1)
# left_join  조건 컬럼 code_job
left_join(
df, code_book, by='code_job'
)
# left_join  조건 컬럼 code_job
left_join(
df, code_book, by='code_job'
) -> total_df
# df데이터에서 code_job데이터가 결측치가 아니고
# job이 결측치인 데이터가 존재하는가?
df %>%
filter(!is.na(code_job))
# total_df데이터에서 code_job데이터가 결측치가 아니고
# job이 결측치인 데이터가 존재하는가?
total_df %>%
filter(!is.na(code_job))
# total_df데이터에서 code_job데이터가 결측치가 아니고
# job이 결측치인 데이터가 존재하는가?
total_df %>%
filter(!is.na(code_job)) %>%
filter(is.na(job))
# 과연 평균 임금이 가장 높은 상위의 직업 10개는 무엇인가?
total_df %>%
filter(!is.na(job))
# 과연 평균 임금이 가장 높은 상위의 직업 10개는 무엇인가?
total_df %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(job) %>%
summarise(
income_mean = mean(income),
cnt = n())
# 과연 평균 임금이 가장 높은 상위의 직업 10개는 무엇인가?
total_df %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(job) %>%
summarise(
income_mean = mean(income),
cnt = n()) %>%
arrange(-income_mean)
# 과연 평균 임금이 가장 높은 상위의 직업 10개는 무엇인가?
total_df %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(job) %>%
summarise(
income_mean = mean(income),
cnt = n()) %>%
filter(cnt >= 10) %>%
arrange(-income_mean)
# 과연 평균 임금이 가장 높은 상위의 직업 10개는 무엇인가?
total_df %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0,9999)) %>%
group_by(job) %>%
summarise(
income_mean = mean(income),
cnt = n()) %>%
filter(cnt >= 10) %>%
arrange(-income_mean) -> job_income
ggplot(
data = head(job_income, 10),
aes(x = job, y = income_mean)
)+ geom_col()
ggplot(
data = head(job_income, 10),
aes(x = reorder(job, income_mean), y = income_mean)
)+ geom_col()
ggplot(
data = head(job_income, 10),
aes(x = reorder(job, -income_mean),
y = income_mean)
)+ geom_col()
ggplot(
data = head(job_income, 10),
aes(x = reorder(job, -income_mean),
y = income_mean)
)+ geom_col() + coord_flip()
ggplot(
data = head(job_income, 10),
aes(x = reorder(job, income_mean),
y = income_mean)
)+ geom_col() + coord_flip()
# 남자의 기준으로 평균 임금이 높은 상위 10개의 직업
total_df %>%
filter(gender == 'male') %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0, 9999)) %>%
group_by(job) %>%
summarise(income_mean = mean(income),
cnt = n()) %>%
filter(cnt >= 10) %>%
arrange(desc(income_mean)) %>%
head(10)
# 여자의 기준으로 평균 임금이 높은 상위 10개의 직업
# job의 결측치를 제거
# income의 결측치, 0, 9999를 제외
# gender, job을 기준으로 그룹화
# 그룹화 연산 :income의 평균, 개수
# gender가 female인 데이터만 추출
# cnt 가 10 이상인 데이터만 추출
# 평균 임금의 내림차순 정렬
# 상위 10개만 출력
total_df %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0, 9999)) %>%
group_by(gender, job) %>%
summarise(income_mean = mean(income),
cnt = n()) %>%
filter(gender == 'female') %>%
filter(cnt >= 10) %>%
arrange(desc(income_mean)) %>%
head(10)
# 남자의 기준으로 평균 임금이 높은 상위 10개의 직업
total_df %>%
filter(gender == 'male') %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0, 9999)) %>%
group_by(job) %>%
summarise(income_mean = mean(income),
cnt = n()) %>%
filter(cnt >= 10) %>%
arrange(desc(income_mean)) %>%
head(10) -> male_data
# 여자의 기준으로 평균 임금이 높은 상위 10개의 직업
# job의 결측치를 제거
# income의 결측치, 0, 9999를 제외
# gender, job을 기준으로 그룹화
# 그룹화 연산 :income의 평균, 개수
# gender가 female인 데이터만 추출
# cnt 가 10 이상인 데이터만 추출
# 평균 임금의 내림차순 정렬
# 상위 10개만 출력
total_df %>%
filter(!is.na(job)) %>%
filter(!is.na(income) & !income %in% c(0, 9999)) %>%
group_by(gender, job) %>%
summarise(income_mean = mean(income),
cnt = n()) %>%
filter(gender == 'female') %>%
filter(cnt >= 10) %>%
arrange(desc(income_mean)) %>%
head(10) -> female_data
rbind(male_data, female_data)
bind_rows(male_data, female_data)
bind_rows(male_data, female_data) -> total_data
# total_data에 있는 gender 부분의 결측치에 'male'대체
ifelse(
total_data$gender != 'female',
'male',
total_data$gender
)
ifelse(
is.na(total_data$gender),
'male',
total_data$gender
)
ifelse(
is.na(total_data$gender),
'male',
total_data$gender
) -> total_data$gender
total_data
